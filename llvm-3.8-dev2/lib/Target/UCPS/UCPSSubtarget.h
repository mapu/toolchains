//===-- UCPSSubtarget.h - Define Subtarget for the UCPS -------*- C++ -*-===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This file declares the UCPS specific subclass of TargetSubtargetInfo.
//
//===----------------------------------------------------------------------===//

#ifndef UCPS_SUBTARGET_H
#define UCPS_SUBTARGET_H

#include "UCPSFrameLowering.h"
#include "UCPSISelLowering.h"
#include "UCPSInstrInfo.h"
#include "UCPSSelectionDAGInfo.h"
#include "llvm/Target/TargetSubtargetInfo.h"
#include "llvm/CodeGen/SelectionDAGTargetInfo.h"
#include <string>

#define GET_SUBTARGETINFO_HEADER
#include "UCPSGenSubtargetInfo.inc"

namespace llvm {
class StringRef;
class UCPSFrameLowering;

class UCPSSubtarget: public UCPSGenSubtargetInfo {
  InstrItineraryData InstrItins;
  UCPSInstrInfo InstrInfo;
  UCPSFrameLowering FrameLowering;
  UCPSTargetLowering TLInfo;
  SelectionDAGTargetInfo TSInfo;
public:
  UCPSSubtarget(const Triple &TT, StringRef CPU,
                StringRef FS, const TargetMachine &TM);

  /// ParseSubtargetFeatures - Parses features string setting specified
  /// subtarget options.  Definition of function is auto generated by tblgen.
  void
  ParseSubtargetFeatures(StringRef CPU, StringRef FS);

  /// getInstrItins - Return the instruction itineraies based on subtarget
  /// selection.
  const InstrItineraryData *
  getInstrItineraryData() const {
    return &InstrItins;
  }

  const UCPSInstrInfo *getInstrInfo() const override {
    return &InstrInfo;
  }

  const UCPSTargetLowering *getTargetLowering() const override {
    return &TLInfo;
  }

  const SelectionDAGTargetInfo *getSelectionDAGInfo() const override {
    return &TSInfo;
  }

  const UCPSRegisterInfo *getRegisterInfo() const override {
    return &InstrInfo.getRegisterInfo();
  }

  const TargetFrameLowering *getFrameLowering() const override {
    return &FrameLowering;
  }
};
}    // end namespace llvm

#endif
