//===-- MMPUInstPrinter.h - Convert MMPU MCInst to assembly syntax --===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This class prints an MMPU MCInst to a .s file.
//
//===----------------------------------------------------------------------===//

#ifndef MMPUINSTPRINTER_H
#define MMPUINSTPRINTER_H

#include "llvm/MC/MCInstPrinter.h"

namespace llvm
{
	class MMPUInstPrinter: public MCInstPrinter
	{
	  const MCRegisterInfo & RI;
		public:
			explicit
			MMPUInstPrinter(const MCAsmInfo &MAI,
							const MCInstrInfo &MII,
							const MCRegisterInfo &MRI)
							: MCInstPrinter(MAI, MII, MRI), RI(MRI)
			{
			}

			virtual void
			printInst(const MCInst *MI, raw_ostream &O, StringRef Annot);

			void
			printInstList(const MCInst *MI, raw_ostream &O, bool & isAllNOP);

			/****************** autogenerated by tblgen ********************/
			void
			printInstruction(const MCInst *MI, raw_ostream &O);

			static const char *
			getRegisterName(unsigned RegNo);
			/***************************************************************/

			void
			printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O) const;

			void
			printImmOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O) const;

			void
			printOpAddrJImm(const MCInst *MI, unsigned OpNo, raw_ostream &O) const;

			void
			printOpAddrJJ(const MCInst *MI, unsigned OpNo, raw_ostream &O) const;

			void
			printBIUOptions(const MCInst *MI, unsigned OpNo, raw_ostream &O) const;

      void
      printBIUStOptions(const MCInst *MI, unsigned OpNo, raw_ostream &O) const;

			void
			printIALUOptions(const MCInst *MI, unsigned OpNo, raw_ostream &O) const;

			void
			printConds(const MCInst *MI, unsigned OpNo, raw_ostream &O) const;

			void
			printTPortExt(const MCInst *MI, unsigned OpNo, raw_ostream &O) const;

      void
      printMRegExt(const MCInst *MI, unsigned OpNo, raw_ostream &O) const;

			void
			printFALUOptions(const MCInst *MI, unsigned OpNo, raw_ostream &O) const;

			void
			printFALUDblOptions(const MCInst *MI, unsigned OpNo, raw_ostream &O) const;

			void
      printFMACOptions(const MCInst *MI, unsigned OpNo, raw_ostream &O) const;

      void
      printIMACOptions(const MCInst *MI, unsigned OpNo, raw_ostream &O) const;

      void
      printCOption(const MCInst *MI, unsigned OpNo, raw_ostream &O) const;

      void
      printCombineOptions(const MCInst *MI, unsigned OpNo, raw_ostream &O) const;

      void
      printMr2Options(const MCInst *MI, unsigned OpNo, raw_ostream &O) const;

			void
			printUImm10(const MCInst *MI, unsigned OpNo, raw_ostream &O) const;

      void
      printKUImm4(const MCInst *MI, unsigned OpNo, raw_ostream &O) const;
	};

}  // end namespace llvm

#endif
