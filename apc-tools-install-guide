GNU build system uses 3 steps: configure - build - install.
This document describes how to install llvm, ld.gold, and newlib.

1. How to install ragel?
llvm needs a lexer generated by ragel.
1.1 configure
  configure CFLAGS="-O2" CXXFLAGS="-O2" --prefix="......"
1.2 build
  make
1.3 install
  make install

2. How to install llvm?
llvm uses ragel to generate lexer for mspu and mmpu, so we need "ragel" when we build llvm.
2.1 configure
  configure --disable-assertions --enable-optimized --disable-debug-symbols --enable-targets=mspu,mmpu,x86 CC=gcc CXX=g++ --prefix="......"
2.2 build
  make   ### if we have "ragel" under $PATH env
  make RAGEL="where-ragel-is"
2.3 install
  make install

3. How to install ld.gold
ld.gold needs a library named iberty, thus we have to build libiberty.a first.
3.1 compile iberty
  libiberty/configure --prefix=`pwd`
  make # this command generate library named "libiberty.a" under current directory.
3.2 compile ld.gold
3.2.1 configure
  gold/configure --enable-targets=all? CCFLAGS=-O2 --prefix="..."
3.2.2 build
  make
3.2.3 install
  make install

4. How to install newlib?
4.1 configure
  Note:
    1. Since newlib uses llvm toolkit, we need that they can be searched under $PATH,
       otherwise, we have to tell specificly where clang, llvm-mc, ld.gold, llvm-objdump are.
    2. --prefix has to be "${LLVM}/lib", where ${LLVM} is the directory we specified in step 2 to install llvm.
  configure --target=mspu  CC_FOR_TARGET="clang -target mspu" CFLAGS_FOR_TARGET="-O0 -nostdlibinc" "CFLAGS_FOR_BUILD=-g -O0" DEBUG_PREFIX_CFLAGS_FOR_TARGET="-O0 -g -nostdlibinc"  AR_FOR_TARGET=ar AS_FOR_TARGET="llvm-mc  -arch=mspu"  LD_FOR_TARGET="ld.gold"  OBJDUMP_FOR_TARGET="llvm-objdump -arch=mspu -d"   READELF_FOR_TARGET=readelf RANLIB_FOR_TARGET=ranlib  STRIP_FOR_TARGET=strip   --enable-multilib=no  --prefix="${LLVM}/lib"
4.2 build
  make
4.3 install
  make install

5. How to install openocd?
5.1 configure
	configure  --prefix="......"  CFLAGS="-O2 -std=gnu99"
5.2 build
  make
5.3 install
  make install
